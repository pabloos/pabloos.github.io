<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>byBit</title>
    <link>https://pabloos.github.io/</link>
    <description>Recent content on byBit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Apr 2020 13:20:57 +0200</lastBuildDate>
    
	<atom:link href="https://pabloos.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pipelines</title>
      <link>https://pabloos.github.io/concurrency/pipelines/</link>
      <pubDate>Thu, 09 Apr 2020 13:20:57 +0200</pubDate>
      
      <guid>https://pabloos.github.io/concurrency/pipelines/</guid>
      <description>All the code used here is on my github: pabloos. Keep an eye on it, for clarity I will not reference all the functions. Each section has his own branch.
1. Original Sketch A pipeline is not unlike an assembly line: a queue of jobs that transform an input and sends it to the next stage. In Go an obvious implementation would be based on channels (originally based on an idea in the oficial blog), in which each function represents a separate stage connected with the next one using a channel.</description>
    </item>
    
    <item>
      <title>E2E with Jest And Puppeteer. How I do it.</title>
      <link>https://pabloos.github.io/testing/e2e-with-jest-and-puppeteer.-how-i-do-it/</link>
      <pubDate>Thu, 09 Apr 2020 12:03:21 +0200</pubDate>
      
      <guid>https://pabloos.github.io/testing/e2e-with-jest-and-puppeteer.-how-i-do-it/</guid>
      <description>As a backend developer E2E testing is a must for me. E2E testing does not only check the features of the frontend, it cares about the whole system. A good match for this purpose on Node it&amp;rsquo;s the jest and puppeteer tandem for testing web apps.
(Note: From now on I assume that you have some experience with the API of both technologies)
About the dependencies You will find a bunch of posts about this topic on the internet.</description>
    </item>
    
  </channel>
</rss>